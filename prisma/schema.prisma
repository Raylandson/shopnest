// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Product {
  id             Int             @id @default(autoincrement())
  name           String          @unique
  description    String?
  price          Float
  category       String
  imageUrl       String?
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  specifications Specification[]

  cartItems      CartItem[]

  OrderItem OrderItem[]
}

model Specification {
  id        Int     @id @default(autoincrement())
  name      String  // e.g., "Cores", "Clock Speed", "RAM Type"
  value     String  // e.g., "6", "3.7GHz", "DDR4"
  productId Int     // Changed to Int to match Product.id
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([productId, name])
}


model User {
  id             Int             @id @default(autoincrement())
  username       String          @unique
  password       String
  role           String          @default("CLIENT") // CLIENT, ADMIN
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  Cart           Cart?

  Order Order[]
}

model Cart {
  id             Int             @id @default(autoincrement())
  userId         Int             @unique
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  user           User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  cartItems      CartItem[]
}

model CartItem {
  id             Int             @id @default(autoincrement())
  productId      Int
  cartId         Int
  quantity       Int             @default(1)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  product        Product         @relation(fields: [productId], references: [id], onDelete: Cascade)
  cart           Cart            @relation(fields: [cartId], references: [id], onDelete: Cascade)

  @@unique([cartId, productId])
}


model Order {
  id             Int             @id @default(autoincrement())
  userId         Int
  totalAmount    Float
  isConfirmed    Boolean         @default(false)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  user           User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  orderItems     OrderItem[]
}
model OrderItem {
  id             Int             @id @default(autoincrement())
  orderId        Int
  productId      Int
  quantity       Int             @default(1)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  order          Order           @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product        Product         @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@unique([orderId, productId])
}